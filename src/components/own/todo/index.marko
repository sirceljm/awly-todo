class {
    onCreate(){
        this.state = {
            todos: [{
                id: 0,
                text: 'Buy milk',
                completed: true
            },{
                id: 1,
                text: 'Clean the house',
                completed: false
            },{
                id: 2,
                text: 'Walk the dog',
                completed: false
            }],
            lastTodoId: 2,
            showTodosState: 'all'
        };
    }

    addTodoOnEnter(event, input){
        if(event.keyCode === 13){
            this.state.todos = this.state.todos.concat({
                text: input.value,
                completed: false
            });
            input.value = "";
        }
    }

    toggleTodoStatus(todo, event, input){
        todo.completed = input.checked;
        this.setStateDirty('todos');
    }

    setShowTodosState(todoState, event){
        this.state.showTodosState = todoState;
    }

    filterFn(todos, todoState){
        if (todoState == 'active') {
            return todos.filter(todo => todo.completed === false);
        } else if (todoState == 'completed') {
            return todos.filter(todo => todo.completed === true);
        } else {
            return todos;
        }
    }
}

<div.todo>
    <div.todo__input>
        <input type="text"
               placeholder="What needs to be done?"
               on-keypress("addTodoOnEnter") />
    </div>

    <div.todo__list>
        <for(todo in component.filterFn(state.todos, state.showTodosState))>
            <div.todo__item class="${todo.completed ? 'todo__item--completed' : ''}">
                <label.todo__item-checkbox>
                    <input type="checkbox"
                           checked=todo.completed
                           on-change("toggleTodoStatus", todo) />
                </label>
                <span.todo__item-text>${todo.text}</span>
            </div>
        </for>
    </div>
    <div.todo__footer>
        $ var todosLeft = component.filterFn(state.todos, 'active').length;
        <div.todo__count>${todosLeft} ${todosLeft === 1 ? 'item' : 'items'} left</div>
        <div.todo__filters>
            <span.todo__filter-btn on-click("setShowTodosState", "all")>All</span>
            <span.todo__filter-btn on-click("setShowTodosState", "active")>Active</span>
            <span.todo__filter-btn on-click("setShowTodosState", "completed")>Completed</span>
        </div>
    </div>
</div>

style.scss {
    $color-dark-gray: #777777;
    $color-gray: #4d4d4d;
    $color-light-gray: #e6e6e6;

    .todo {
        width: 100%;
        max-width: 550px;
        margin-bottom: 20px;

        background: #ffffff;

        box-shadow:
            0 25px 46px 0 rgba(97, 97, 97, 0.1),
            0 1px 1px rgba(0, 0, 0, 0.2),
            0 8px 0 -3px #fbfbfb,
            0 9px 1px -3px rgba(0, 0, 0, 0.2),
            0 16px 0 -6px #f6f6f6,
            0 17px 2px -6px rgba(0, 0, 0, 0.2);

        &__input {
            color: $color-gray;
            margin: 0;
            padding: 16px 16px 16px 60px;
            box-sizing: border-box;

            background-color: white;
            box-shadow: inset 0 -2px 1px rgba(0,0,0,0.03);

            font-size: 24px;
            line-height: 1.4em;

            input {
                border: none;
                width: 100%;

                &:focus {
                    outline: none;
                }
            }

            & ::placeholder {
                font-style: italic;
                font-weight: 300;
                color: $color-light-gray;
                opacity: 1;
            }

            & :-ms-input-placeholder {
                font-style: italic;
                font-weight: 300;
                color: $color-light-gray;
            }

            & ::-ms-input-placeholder {
                font-style: italic;
                font-weight: 300;
                color: $color-light-gray;
            }
        }

        &__item {
            padding: 16px 16px 16px 60px;
            background-color: white;
            font-size: 24px;
            border-top: 1px solid $color-light-gray;

            &--completed {
                .todo__item-text {
                    text-decoration: line-through;
                    color: $color-light-gray;
                }

                .todo__item-checkbox {
                    background-image: url('/assets/svg/todo-complete.svg');
                }
            }
        }

        &__item-checkbox {
            width: 40px;
            margin-left: -55px;
            height: 40px;
            display: inline-block;
            margin-right: 15px;
            vertical-align: middle;
            cursor: pointer;
            background-image: url('/assets/svg/todo-incomplete.svg');

            input {
                display: none;
            }
        }

        &__count {
            float: left;
        }

        &__filters {
            position: absolute;
            left: 0;
            right: 0;
            text-align: center;
        }

        &__filter-btn {
            border: 1px solid rgba(175, 47, 47, 0.2);
            border-radius: 4px;
            margin: 3px;
            padding: 3px 7px;
            font-size: 14px;
            cursor: pointer;
        }

        &__footer {
            position: relative;
            height: 20px;
            padding: 10px 15px;
            background-color: white;
            font-size: 14px;
            color: $color-dark-gray;
            border-top: 1px solid $color-light-gray;
            line-height: 1.5;
        }
    }
}
